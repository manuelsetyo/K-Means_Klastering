# -*- coding: utf-8 -*-
"""K-Means Klastering dari awal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dqhDKGTutakl192xJEFRlKMgpaRlAjGJ
"""

from sklearn import datasets
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
from scipy.spatial.distance import cdist
import matplotlib.pyplot as plt

iris = datasets.load_iris()
features = iris.data
plt.scatter(features[:,0], features[:,1])
plt.show()

scaler = StandardScaler()
features_standardized = scaler.fit_transform(features)

from sklearn.metrics import silhouette_samples, silhouette_score

wcss = []
for i in range(1, 11):
  kmeans = KMeans(n_clusters=i, init='k-means++', max_iter=300, n_init=10, random_state=0)
  kmeans.fit(features)
  wcss.append(kmeans.inertia_)
plt.plot(range(1, 11), wcss)
plt.title('Elbow Method')
plt.xlabel('Number of Cluster')
plt.ylabel('WCSS')
plt.show()

kmeans = KMeans(n_clusters=4, init='k-means++', max_iter=300, n_init=10, random_state=0)
pred_y = kmeans.fit_predict(features)
plt.scatter(features[:,0], features[:,1])
plt.scatter(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1], s=300, c='red')
plt.show()

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from sklearn.cluster import KMeans

datasets = pd.read_csv('konsumen.csv')
datasets.keys()

dataku = pd.DataFrame(datasets)
dataku.head()

X = np.asarray(datasets)
print(X)

plt.scatter(X[:,0], X[:,1], label='True Position')
plt.xlabel("X")
plt.ylabel("Y")
plt.title("Grafik Hasil ")
plt.show()

kmeans = KMeans(n_clusters=2)
kmeans.fit(X)

print(kmeans.cluster_centers_)

plt.scatter(X[:,0], X[:,1], c=kmeans.labels_, cmap='rainbow')
plt.xlabel("X")
plt.ylabel("Y")
plt.title("Grafik Hasil")
plt.show()

plt.scatter(X[:,0], X[:,1], c=kmeans.labels_, cmap='rainbow')
plt.scatter(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1], color='black')
plt.xlabel("X")
plt.ylabel("Y")
plt.title("Grafik Hasil")
plt.show()